package testes;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.List;

import exception.AtributosExcedidosException;
import exception.IdadeInvalidaException;
import exception.InvalidEmailException;
import exception.InvalidLevelExpcetion;
import exception.InvalidNameException;
import exception.JogadorInexistenteException;
import exception.NumeroNegativoException;
import exception.NumeroNuloException;
import exception.SkillsInvalidasException;
import exception.StatusExcedidosException;
import model.Arqueiro;
import model.Ficha;
import model.Guerreiro;
import model.Jogador;
import model.Personagem;

public class ArquivoTeste {
	public static void main(String[] args) throws Exception {
		
		try {
			
			String arquivo = "Fichas.txt";
			FileReader fileR = new FileReader(arquivo);
			BufferedReader leitura = new BufferedReader(fileR);
			FileWriter fileW = new FileWriter("out_"+arquivo);
			BufferedWriter escrita = new BufferedWriter(fileW);
			
			String linha = leitura.readLine();
			String[] campos = null;
			List<Personagem> personagens = new ArrayList<Personagem>();
			Personagem personagem =  null;
	                   
			while(linha != null) {
				
				campos = linha.split(";");
				String tipo = campos[0];
				
				switch (tipo.toUpperCase()) {
					case "J":				
	                    Jogador jogador = null;
	                    try{
	                    	jogador = new Jogador("Joao","joao@jao.jo",88);
	                    	jogador.toString();
	                	} catch (InvalidNameException | InvalidEmailException | IdadeInvalidaException e) {
	                		System.out.println(e.getMessage());
	                	}
					case "F":
						try {
	                        Ficha ficha1 = new Ficha(jogador);
	                        ficha1.setPersonagem(personagens);                            							ficha1.setEquipamento(null);
	                        
	                        System.out.println(ficha1.toString());
						} catch (JogadorInexistenteException e) {
	                        System.out.println(e.getMessage());
						}
					case "G":
						try {
							List<String> skills = new ArrayList<String>();
							skills.add("atacar");
							skills.add("defender");
            	   			Guerreiro warrior = new Guerreiro(5,5,5,skills);
            	   			
						} catch ( NumeroNegativoException | NumeroNuloException | SkillsInvalidasException | AtributosExcedidosException  e) {
                    	   
                           System.out.println(e.getMessage());
						}
						break;
					
					case "A":
	                    try {
	                    	List<String> habilidades = new ArrayList<String>();
	                    	habilidades.add("atirar");
	                    	habilidades.add("esquivar");
							
	                    	Arqueiro arch = new Arqueiro(10,10,10,habilidades);
	                    	arch.setNome("Oliver Queen");
	                    	arch.setStamina(2000);
	                    	arch.setLevel(1000);
	                    	arch.setMana(0);
	                    	arch.setVida(9999);
	                    	
	                       
	                    } catch (InvalidNameException| InvalidLevelExpcetion| StatusExcedidosException e) {
	                        System.out.println(e.getMessage());
	                    }
					case "M":
	                    try {
	                    	Mago mago = new Mago(Integer.valueOf(campos[1]),Boolean.valueOf(campos[2]),Integer.valueOf(campos[3]));
	                        externa.setQntdVentiladores(Integer.valueOf(campos[4]));
	                        externa.setFrio(Boolean.valueOf(campos[5]));
	                        externa.setMusico(campos[6]);
	                        personagens.add(externa);
	                       
	                        //System.out.println(externa);
	                    } catch (Preï¿½oMesaException | QntdLugaresException e) {
	                        System.out.println(e.getMessage());
	                    }
				
				}
				linha = leitura.readLine();
	                            
	            try {
	               ficha1.toString();
	               escrita.write(ficha1.toString());				
	            } catch (JogadorInexistenteException e) {
	                System.out.println(e.getMessage());
	            }
			}			
			leitura.close();
			escrita.close();
	                    
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
