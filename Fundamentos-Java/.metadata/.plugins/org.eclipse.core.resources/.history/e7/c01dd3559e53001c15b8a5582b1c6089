package teste;

public class FornecedoresTeste {
	public static void main(String[] args) {
		
	}
}
/*
	A empresa ACME necessita facilitar e controlar suas compras: de material de limpeza, 
	material de escrit√≥rio at√© m√≥veis e utens√≠lios. Todos os itens da empresa (Produto) 
	dever√£o passar por um sistema que registre as tomadas de pre√ßos que s√£o feitas por Internet, 
	telefone, jornais etc (Cota√ß√£o).
	Sua tarefa √© implementar os m√≥dulos de cadastro de Produtos e Cota√ß√µes. 
	N√£o √© para implementar nada al√©m desses dois m√≥dulos.

	Segue abaixo a lista de itens que dever√£o fazer parte do seu projeto:

	Geral:
	Diret√≥rio com o projeto Maven, incluindo o pom.xml.
	Diret√≥rio ‚Äúsetup‚Ä? contendo:
	Script SQL do banco de dados MySQL para cria√ß√£o das tabelas.
	Script SQL do banco de dados para inser√ß√£o de registros de teste (produtos e cota√ß√µes).
	Arquivo README.txt com instru√ß√µes para fazer o sistema funcionar.
	Planilha de exemplo com dados exportados pelo sistema.
	Todas as classes dever√£o estar contidas nos seus respectivos pacotes, 
	conforme o diagrama de classes fornecido.
	
	Todos os pacotes dever√£o ter br.edu.infnet como prefixo.
	GUI:
	As telas dever√£o ser implementadas com as bibliotecas AWT e/ou Swing. Nenhuma funcionalidade dever√° ser executada na console.
	Os dados de entrada dever√£o ser validados adequadamente e as mensagens de erro dever√£o ser claras e objetivas. Todas as mensagens dever√£o ter √≠cones adequados.
	Os dados de entrada dever√£o usar m√°scaras sempre que poss√≠vel.
	Todos os dados de datas e moeda que aparecem na tela dever√£o aparecer formatados no padr√£o brasileiro.
	Classes de Acesso ao Banco de Dados:
	Implementar classe respons√°vel pela abertura de conex√µes com o banco de dados.
	Os par√¢metros de conex√µes dever√£o ser armazenados em um arquivo properties que ser√° colocado no classpath da aplica√ß√£o.
	As exce√ß√µes dessa classe dever√£o ser propagadas para a GUI e o seu tratamento dever√° implementar mensagens adequadas para o usu√°rio.
	Implementar todos os m√©todos de cadastro (CRUD), al√©m dos necess√°rios para o funcionamento do sistema. Implementar apenas o que for necess√°rio para o funcionamento do sistema.
	As exce√ß√µes dessas classes dever√£o ser propagadas para a GUI e o seu tratamento dever√° implementar mensagens adequadas para o usu√°rio.
	Os m√©todos dessas classes dever√£o usar try-with-resources corretamente, garantindo que todas as conex√µes ser√£o fechadas.
	Os m√©todos dever√£o seguir o padr√£o:
	inserir.
	alterar.
	excluir.
	obter(id) ‚Üí consulta que retorna 1 registro pelo seu id.
	obterPor‚Ä¶ ‚Üí para consultas que retornem 1 registro segundo um crit√©rio.
	listar ‚Üí retorna todos os registros.
	listarPor‚Ä¶ ‚Üí retorna N registros segundo um crit√©rio.
	Classes de neg√≥cio dever√£o conter construtores, setters e getters.
	Boa Sorte!

	Antes de fazer sua entrega, re√∫na todos os arquivos relativos ao seu Assessment (AT) em um √∫nico arquivo no formato .zip. Utilize seu pr√≥prio nome para nomear o arquivo, identificando tamb√©m o teste correspondente, como no exemplo: Nome_sobrenome_DR1_AT.zip.
*/