package testes;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import exception.AtributosExcedidosException;
import exception.JogadorInexistenteException;
import exception.NumeroNegativoException;
import exception.NumeroNuloException;
import exception.SkillsInvalidasException;
import model.Arqueiro;
import model.Equipamento;
import model.Ficha;
import model.Guerreiro;
import model.Jogador;
import model.Mago;
import model.Personagem;

public class ArquivoTeste {
	public static void main(String[] args) throws Exception {
		
		try {
			
			String arquivo = "Fichas.txt";
			FileReader fileR = new FileReader(arquivo);
			BufferedReader leitura = new BufferedReader(fileR);
			FileWriter fileW = new FileWriter("out_"+arquivo);
			BufferedWriter escrita = new BufferedWriter(fileW);
			
			String linha = leitura.readLine();
			String[] campos = null;
			List<Personagem> personagens = new ArrayList<Personagem>();
			Ficha ficha1 = null;
            Jogador jogador = null;
            Equipamento equipamento = null;
            
			while(linha != null) {
				
				campos = linha.split(";");
				String tipo = campos[0];
				
				switch (tipo.toUpperCase()) {
					case "J":		
						
						jogador = new Jogador();
						jogador.setNome(campos[1]);
						jogador.setEmail(campos[2]);
						jogador.setIdade(Integer.valueOf(campos[3]));
						
						jogador.toString();
						
					case "F":
						try {
							List<String> habilidades = new ArrayList<String>();
	                    	habilidades.add("atirar");
	                    	habilidades.add("esquivar");
							
	                    	Arqueiro arch = new Arqueiro(Integer.valueOf(campos[1]),Integer.valueOf(campos[2]),Integer.valueOf(campos[3]),habilidades);
	                    	
							equipamento = new Equipamento(arch, campos[4], campos[5], campos[6]);
							jogador = new Jogador();
							jogador.setNome(campos[1]);
							jogador.setIdade(Integer.valueOf(campos[2]));
							jogador.setEmail(campos[3]);
							
	                        ficha1 = new Ficha(jogador);
	                        ficha1.setPersonagem(personagens);                            							ficha1.setEquipamento(equipamento);
	                        
	                        System.out.println(ficha1.toString());
	                        
						} catch (JogadorInexistenteException e) {
	                        System.out.println(e.getMessage());
						}
					case "G":
						try {
							List<String> skills = new ArrayList<String>();
							skills.add("atacar");
							skills.add("defender");
            	   			Guerreiro warrior = new Guerreiro(Integer.valueOf(campos[1]),Integer.valueOf(campos[2]),Integer.valueOf(campos[3]), skills);
            	   			
            	   			System.out.println(warrior);
            	   			personagens.add(warrior);
            	   			
						} catch ( NumeroNegativoException | NumeroNuloException | SkillsInvalidasException | AtributosExcedidosException  e) {
                    	   
                           System.out.println(e.getMessage());
						}
						break;
					
					case "A":
	                    try {
	                    	List<String> habilidades = new ArrayList<String>();
	                    	habilidades.add("atirar");
	                    	habilidades.add("esquivar");
							
	                    	Arqueiro arch = new Arqueiro(Integer.valueOf(campos[1]),Integer.valueOf(campos[2]),Integer.valueOf(campos[3]), habilidades);
	                    	arch.setNome(campos[4]);
	                    	arch.setStamina(Integer.valueOf(campos[5]));
	                    	arch.setLevel(Integer.valueOf(campos[6]));
	                    	arch.setMana(Integer.valueOf(campos[7]));
	                    	arch.setVida(Integer.valueOf(campos[8]));
	                    	
	                    	personagens.add(arch);
	                    	System.out.println(arch);
	                       
	                    } catch (SkillsInvalidasException | NumeroNegativoException | NumeroNuloException | AtributosExcedidosException e) {
	                        System.out.println(e.getMessage());
	                    }
					case "M":
	                    try {
	                    	List<String> magias = new ArrayList<String>();
	                    	magias.add("bola de fogo");
	                    	magias.add("bomba de fuma√ßa");
							
	                    	Mago mage = new Mago(10,10,10,magias);
	                    	mage.setNome("Oliver Queen");
	                    	mage.setStamina(2000);
	                    	mage.setLevel(1000);
	                    	mage.setMana(0);
	                    	mage.setVida(9999);
	                    	
	                    	personagens.add(mage);
	                    	
	                    	System.out.println(mage);
	                    	
	                    } catch (SkillsInvalidasException | NumeroNegativoException | NumeroNuloException| AtributosExcedidosException e) {
	                        System.out.println(e.getMessage());
	                    }
				
				}
				linha = leitura.readLine();
	                            
	            ficha1.toString();
	            escrita.write(ficha1.toString());
			}			
			leitura.close();
			escrita.close();
	                    
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
